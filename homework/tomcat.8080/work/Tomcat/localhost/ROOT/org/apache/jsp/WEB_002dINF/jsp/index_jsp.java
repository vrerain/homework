/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.26
 * Generated at: 2021-06-15 10:34:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.gx.domain.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.gx.domain");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>首页</title>\r\n");
      out.write("\r\n");

User user = (User) request.getSession().getAttribute("user"); 
String name = user.getName();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 导入easyui的资源文件 -->\r\n");
      out.write("        <script type=\"text/javascript\" src=\"static/easyui/jquery.min.js\"></script>\r\n");
      out.write("        <script type=\"text/javascript\" src=\"static/easyui/jquery.easyui.min.js\"></script>\r\n");
      out.write("        <script type=\"text/javascript\" src=\"static/easyui/locale/easyui-lang-zh_CN.js\"></script>\r\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"static/easyui/themes/icon.css\">\r\n");
      out.write("        <link id=\"themeLink\" rel=\"stylesheet\" type=\"text/css\" href=\"static/easyui/themes/default/easyui.css\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"static/css/zTreeStyle/zTreeStyle.css\">\r\n");
      out.write("        <script src=\"static/js/jquery.ztree.all.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("        * {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        #sidebar {\r\n");
      out.write("            background-color: #000;\r\n");
      out.write("            float: left;\r\n");
      out.write("            display: block;\r\n");
      out.write("            width: 200px;\r\n");
      out.write("            height: 750px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        h1 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            display: block;\r\n");
      out.write("            color: white;\r\n");
      out.write("            margin: 15px 0px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        #sidebar span {\r\n");
      out.write("            color: white;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            display: block;\r\n");
      out.write("            padding: 5px 0px;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 40px;\r\n");
      out.write("            line-height: 35px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        #header {\r\n");
      out.write("            float: left;\r\n");
      out.write("            display: block;\r\n");
      out.write("            height: 40px;\r\n");
      out.write("            background-color: #277de6;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        #header span {\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            display: block;\r\n");
      out.write("            float: left;\r\n");
      out.write("            border: 1.5px solid grey;\r\n");
      out.write("            width: 210px;\r\n");
      out.write("            height: 37px;\r\n");
      out.write("            line-height: 37px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        #function:hover {\r\n");
      out.write("            background: #8f949a;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        #content {\r\n");
      out.write("            float:left;\r\n");
      out.write("            display:block;\r\n");
      out.write("            width:1275px;\r\n");
      out.write("            height:710px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div id=\"sidebar\">\r\n");
      out.write("        <sapn>\r\n");
      out.write("            <h1>导航</h1>\r\n");
      out.write("        </sapn>\r\n");
      out.write("        <span style=\"background-color: #277de6\">首页</span>\r\n");
      out.write("        <span><a href=\"staffAdminister\" style=\"color:white;text-decoration:none;\">人事管理</a></span>\r\n");
      out.write("        <span><a href=\"attendanceCount\" style=\"color:white;text-decoration:none;\">考勤统计</a></span>\r\n");
      out.write("        <span><a href=\"salaryAdminister\" style=\"color:white;text-decoration:none;\">工资管理</a></span>\r\n");
      out.write("        <span><a href=\"personalCenter\" style=\"color:white;text-decoration:none;\">个人中心</a></span>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div id=\"header\">\r\n");
      out.write("        <span id=\"function\">首页</span>\r\n");
      out.write("        <span id=\"function\">人事管理</span>\r\n");
      out.write("        <span id=\"function\">考勤统计</span>\r\n");
      out.write("        <span id=\"function\">工资管理</span>\r\n");
      out.write("        <span id=\"function\">个人中心</span>\r\n");
      out.write("        <span style=\"border-right: 0px;\">欢迎您，");
      out.print(name );
      out.write("</span>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div id=\"content\">\r\n");
      out.write("        <!-- 从这里编写主页内容-->\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
